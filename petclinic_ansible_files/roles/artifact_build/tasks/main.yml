---
# tasks file for artifact_build
- name: Clone Application Repository
  git:
    repo: https://github.com/spring-petclinic/spring-framework-petclinic.git
    dest: /tmp/spring-framework-petclinic
    update: no

- name: Change Ownership to user
  file:
    path: /tmp/spring-framework-petclinic/
    owner: vagrant
    group: vagrant
    recurse: yes
    state: directory

- name: Update the configurations in file
  replace:
    path: /tmp/spring-framework-petclinic/pom.xml
    regexp: '{{ item.search_string }}'
    replace: '{{ item.replace_string }}'
    backup: yes
  loop:
    - { search_string: '<groupId>mysql</groupId>', replace_string: '<groupId>com.mysql</groupId>' }
    - { search_string: '<artifactId>mysql-connector-java</artifactId>', replace_string: '<artifactId>mysql-connector-j</artifactId>' }
    - { search_string: '<maven-surefire-plugin.version>3.2.3</maven-surefire-plugin.version>', replace_string: '<maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>' }
    - { search_string: 'mysql://localhost:3306/', replace_string: 'mysql://db01:3306/' }
    - { search_string: '<jdbc.username>petclinic', replace_string: '<jdbc.username>admin' }

- name: Build the JAVA Application
  command: ./mvnw clean package -P MySQL
  args:
     chdir: /tmp/spring-framework-petclinic

- name: Stop the application service
  ansible.builtin.service:
    name: tomcat
    state: stopped

- name: Collect all the files in Webapps
  ansible.builtin.shell: sudo rm -rf /usr/local/tomcat/webapps/*


- name: Place the Artifact in the Tomcat server and Assign ownership
  copy:
    src: /tmp/spring-framework-petclinic/target/petclinic.war
    dest: /usr/local/tomcat/webapps/ROOT.war
    owner: tomcat
    group: tomcat
    remote_src: yes

- name: Start the application service
  ansible.builtin.service:
    name: tomcat
    state: started

